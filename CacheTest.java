import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.ArrayList;
/**
 * Utilizes serialized Player ArrayLists from data files generated by PlayerGenerator.java to fill a Cache using Cache.java. 
 * The time taken, hit, and reference information is then printed to console.
 * Usage: java CacheTest <cache-size> <serialized-data-filename>
 * 
 * @author Joshua Pfeil
 */
public class CacheTest {
    /**
     * The main method. Runs and controls the program.
     * 
     * @param args
     */
    public static void main(String[] args) {

        int size;

        //checks if there are exactly 2 arguments
        if (args.length != 2) {
            System.out.println("Insufficient args! Usage: java CacheTest <cache-size> <serialized-data-filename>");
            System.exit(0);
        }

        //try/catch due to the checked exceptions from reading in inputs, also provides user with input on what happened.
        try {

            //takes in the first argument
            size = Integer.parseInt(args[0]);

            //Deserialize the file taken from the second argument and store as ArrayList
            ObjectInputStream in = new ObjectInputStream(new FileInputStream(args[1]));
            Cache<Player> myCache = new Cache<Player>(size);
            //compiler getts a bit grumpy because of the cast, but it works fine in practice
            ArrayList<Player> arr = (ArrayList<Player>) in.readObject();  
            in.close();

            //run through the ArrayList and add the data to the cache, recording the start and stop times
            double start = System.currentTimeMillis();
            for (Player play : arr) {
                myCache.getObject(play);
            }
            double stop = System.currentTimeMillis();

            //print output
            System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
            System.out.println("LinkedList Cache with " + size + " entries has been created");
            System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
            System.out.println(myCache.toString() + "\n");
            System.out.println("----------------------------------------------------------------");
            System.out.println("Time elapsed: " + (stop - start) + " milliseconds");
            System.out.println("----------------------------------------------------------------");


        //checks if the entered number is not an integer
        }catch(NumberFormatException num){
            System.out.println("Please provide an integer size! Usage: java CacheTest <cache-size> <serialized-data-filename>");
            System.exit(0);

        //checks if the file exists
        }catch(FileNotFoundException file){
            System.out.println("Filename not found! Usage: java CacheTest <cache-size> <serialized-data-filename>");
            System.exit(0);

        //checks for any issues in trying to import the Player ArrayList
        }catch(IOException | ClassNotFoundException e){
            System.out.println("Failed to parse file! Usage: java CacheTest <cache-size> <serialized-data-filename>");
            e.printStackTrace();
            System.exit(0);
        }
        
    }
}
